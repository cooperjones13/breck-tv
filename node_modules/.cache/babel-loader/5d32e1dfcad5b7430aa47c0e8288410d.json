{"ast":null,"code":"var _jsxFileName = \"/Users/cooperjones/Documents/Breck-House/breck-tv/src/Weather.js\",\n    _s = $RefreshSig$();\n\n// api url: api.openweathermap.org/data/2.5/weather?q={city name},{state code}&appid={API key}\n// api key: 5ce4087d015baa18617d85c961cefaa8\nimport './weather.css';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [temp, setTemp] = useState(0);\n  const [weatherDescriptor, setWeatherDescriptor] = useState(\"Sunny\");\n  const [weatherCode, setWeatherCode] = useState('01d');\n\n  function getIcon() {\n    switch (weatherCode) {\n      case \"Sunny\":\n        return;\n\n      default:\n        return null;\n    }\n  }\n\n  useEffect(() => {\n    setInterval(() => {\n      axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=39.4808&lon=-106.0676&appid=5ce4087d015baa18617d85c961cefaa8&units=imperial\").then(response => {\n        // console.log(response.data)\n        setTemp(Math.round(response.data.main.temp)); // console.log(response.data.main.temp)\n\n        setWeatherDescriptor(response.data.weather[0].main);\n        setWeatherCode(response.data.weather[0].icon);\n        console.log(\"Weather Updated!\");\n      });\n    }, 30000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"temp\",\n        children: [\" \", temp, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"weatherType\",\n        children: weatherDescriptor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: weatherIconSrc,\n      alt: weatherDescriptor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"hAuuieL17JVDUpRd2T5fWV8zjuI=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/cooperjones/Documents/Breck-House/breck-tv/src/Weather.js"],"names":["axios","useEffect","useState","Weather","temp","setTemp","weatherDescriptor","setWeatherDescriptor","weatherCode","setWeatherCode","getIcon","setInterval","get","then","response","Math","round","data","main","weather","icon","console","log","weatherIconSrc"],"mappings":";;;AAAA;AACA;AACA,OAAO,eAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAqBC,QAArB,QAAoC,OAApC;;;AAEA,SAASC,OAAT,GAAkB;AAAA;;AAEd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CL,QAAQ,CAAC,OAAD,CAA1D;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;;AAEA,WAASQ,OAAT,GAAkB;AACd,YAAOF,WAAP;AACI,WAAK,OAAL;AAAc;;AAEd;AAAS,eAAO,IAAP;AAHb;AAMH;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW,CAAC,MAAI;AACZX,MAAAA,KAAK,CAACY,GAAN,CAAU,iIAAV,EAA6IC,IAA7I,CAAmJC,QAAD,IAAc;AAChK;AACAT,QAAAA,OAAO,CAACU,IAAI,CAACC,KAAL,CAAWF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBd,IAA9B,CAAD,CAAP,CAFgK,CAGhK;;AACAG,QAAAA,oBAAoB,CAACO,QAAQ,CAACG,IAAT,CAAcE,OAAd,CAAsB,CAAtB,EAAyBD,IAA1B,CAApB;AACAT,QAAAA,cAAc,CAACK,QAAQ,CAACG,IAAT,CAAcE,OAAd,CAAsB,CAAtB,EAAyBC,IAA1B,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,OAPG;AAQH,KATU,EASR,KATQ,CAAX;AAWH,GAZQ,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,wBAAyBlB,IAAzB,eAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BE;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,GAAG,EAAEiB,cAAV;AAA0B,MAAA,GAAG,EAAEjB;AAA/B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAvCQH,O;;KAAAA,O;AAyCT,eAAeA,OAAf","sourcesContent":["// api url: api.openweathermap.org/data/2.5/weather?q={city name},{state code}&appid={API key}\n// api key: 5ce4087d015baa18617d85c961cefaa8\nimport './weather.css'\nimport axios from \"axios\";\nimport { useEffect , useState} from \"react\";\n\nfunction Weather(){\n\n    const [temp, setTemp] = useState(0)\n    const [weatherDescriptor, setWeatherDescriptor] = useState(\"Sunny\")\n    const [weatherCode, setWeatherCode] = useState('01d')\n    \n    function getIcon(){\n        switch(weatherCode){\n            case \"Sunny\": return \n\n            default: return null\n        }\n\n    }\n\n    useEffect(() => {\n        setInterval(()=>{\n            axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=39.4808&lon=-106.0676&appid=5ce4087d015baa18617d85c961cefaa8&units=imperial\").then((response) => {\n            // console.log(response.data)\n            setTemp(Math.round(response.data.main.temp))\n            // console.log(response.data.main.temp)\n            setWeatherDescriptor(response.data.weather[0].main)\n            setWeatherCode(response.data.weather[0].icon)\n            console.log(\"Weather Updated!\")\n        });\n        }, 30000)\n        \n    });\n\n\n    return(\n        <div className=\"Weather\">\n            <div>\n                <span className=\"temp\"> {temp}<span>&deg;</span></span>\n                <span className=\"weatherType\">{weatherDescriptor}</span>\n            </div>\n            <img src={weatherIconSrc} alt={weatherDescriptor}/>\n        </div>\n    );\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}