{"ast":null,"code":"var _jsxFileName = \"/Users/cooperjones/Documents/Breck-House/breck-tv/src/Weather.js\",\n    _s = $RefreshSig$();\n\n// api url: api.openweathermap.org/data/2.5/weather?q={city name},{state code}&appid={API key}\n// api key: 5ce4087d015baa18617d85c961cefaa8\nimport './weather.css';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [temp, setTemp] = useState(0);\n  const [weatherDescriptor, setWeatherDescriptor] = useState(\"Sunny\");\n  const [weatherIconSrc, setWeatherIconSrc] = useState('http://openweathermap.org/img/wn/10d.png');\n  useEffect(() => {\n    setInterval(() => {\n      axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=39.4808&lon=-106.0676&appid=5ce4087d015baa18617d85c961cefaa8&units=imperial\").then(response => {\n        // console.log(response.data)\n        setTemp(Math.round(response.data.main.temp)); // console.log(response.data.main.temp)\n\n        setWeatherDescriptor(response.data.weather[0].main);\n        setWeatherIconSrc(`http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`);\n        console.log(\"Weather Updated!\");\n      });\n    }, 30000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", temp, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xB0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }, this), \"F and \", weatherDescriptor, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: weatherIconSrc,\n      alt: weatherDescriptor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"uzqnNKyQ8TcaYflCHTuAEtSjiUM=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/cooperjones/Documents/Breck-House/breck-tv/src/Weather.js"],"names":["axios","useEffect","useState","Weather","temp","setTemp","weatherDescriptor","setWeatherDescriptor","weatherIconSrc","setWeatherIconSrc","setInterval","get","then","response","Math","round","data","main","weather","icon","console","log"],"mappings":";;;AAAA;AACA;AACA,OAAO,eAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAqBC,QAArB,QAAoC,OAApC;;;AAEA,SAASC,OAAT,GAAkB;AAAA;;AAEd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CL,QAAQ,CAAC,OAAD,CAA1D;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,0CAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW,CAAC,MAAI;AACZV,MAAAA,KAAK,CAACW,GAAN,CAAU,iIAAV,EAA6IC,IAA7I,CAAmJC,QAAD,IAAc;AAChK;AACAR,QAAAA,OAAO,CAACS,IAAI,CAACC,KAAL,CAAWF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBb,IAA9B,CAAD,CAAP,CAFgK,CAGhK;;AACAG,QAAAA,oBAAoB,CAACM,QAAQ,CAACG,IAAT,CAAcE,OAAd,CAAsB,CAAtB,EAAyBD,IAA1B,CAApB;AACAR,QAAAA,iBAAiB,CAAE,oCAAmCI,QAAQ,CAACG,IAAT,CAAcE,OAAd,CAAsB,CAAtB,EAAyBC,IAAK,SAAnE,CAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,OAPG;AAQH,KATU,EASR,KATQ,CAAX;AAWH,GAZQ,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA,sBAAQjB,IAAR,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb,YAAsCE,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,GAAG,EAAEE,cAAV;AAA0B,MAAA,GAAG,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA3BQH,O;;KAAAA,O;AA6BT,eAAeA,OAAf","sourcesContent":["// api url: api.openweathermap.org/data/2.5/weather?q={city name},{state code}&appid={API key}\n// api key: 5ce4087d015baa18617d85c961cefaa8\nimport './weather.css'\nimport axios from \"axios\";\nimport { useEffect , useState} from \"react\";\n\nfunction Weather(){\n\n    const [temp, setTemp] = useState(0)\n    const [weatherDescriptor, setWeatherDescriptor] = useState(\"Sunny\")\n    const [weatherIconSrc, setWeatherIconSrc] = useState('http://openweathermap.org/img/wn/10d.png')\n\n    useEffect(() => {\n        setInterval(()=>{\n            axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=39.4808&lon=-106.0676&appid=5ce4087d015baa18617d85c961cefaa8&units=imperial\").then((response) => {\n            // console.log(response.data)\n            setTemp(Math.round(response.data.main.temp))\n            // console.log(response.data.main.temp)\n            setWeatherDescriptor(response.data.weather[0].main)\n            setWeatherIconSrc(`http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`)\n            console.log(\"Weather Updated!\")\n        });\n        }, 30000)\n        \n    });\n\n\n    return(\n        <div className=\"Weather\">\n            <span> {temp}<span>&deg;</span>F and {weatherDescriptor} </span>\n            <img src={weatherIconSrc} alt={weatherDescriptor}/>\n        </div>\n    );\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}